# This file is autogenerated by maturin v1.7.4
# To update, run
#
#    maturin generate-ci github
#
name: PyO3

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Symlink README
        run: |
          cd pyo3/
          ln -s ../README.md ./
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --sdist --find-interpreter -m pyo3/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Prepare OpenCC
        run: |
          sed -i 's/name = "zhconv-rs"/name = "zhconv-rs-opencc"/' pyo3/pyproject.toml
          sed -i 's/name = "zhconv_rs"/name = "zhconv_rs_opencc"/' pyo3/Cargo.toml
          sed -i 's/fn zhconv_rs/fn zhconv_rs_opencc/' pyo3/src/lib.rs
          sed -i 's/\(description = ".*\)"$/\1 (with OpenCC dicts)"/' pyo3/Cargo.toml
      - name: Build wheels - OpenCC
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --sdist --find-interpreter -m pyo3/Cargo.toml -F opencc
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: pyo3/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - name: Symlink README
        run: |
          cd pyo3/
          ln -s ../README.md ./
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Prepare OpenCC
        run: |
          sed -i 's/name = "zhconv-rs"/name = "zhconv-rs-opencc"/' pyo3/pyproject.toml
          sed -i 's/name = "zhconv_rs"/name = "zhconv_rs_opencc"/' pyo3/Cargo.toml
          sed -i 's/fn zhconv_rs/fn zhconv_rs_opencc/' pyo3/src/lib.rs
      - name: Build wheels - OpenCC
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml -F opencc
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: pyo3/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - name: Symlink README
        run: |
          cd pyo3/
          ln -s ../README.md ./
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml
          sccache: 'true'
      - name: Prepare OpenCC
        run: |
          sed -i 's/name = "zhconv-rs"/name = "zhconv-rs-opencc"/' pyo3/pyproject.toml
          sed -i 's/name = "zhconv_rs"/name = "zhconv_rs_opencc"/' pyo3/Cargo.toml
          sed -i 's/fn zhconv_rs/fn zhconv_rs_opencc/' pyo3/src/lib.rs
      - name: Build wheels - OpenCC
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml -F opencc
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: pyo3/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Symlink README
        run: |
          cd pyo3/
          ln -s ../README.md ./
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml
          sccache: 'true'
      - name: Prepare OpenCC
        run: |
          sed -i'' -e 's/name = "zhconv-rs"/name = "zhconv-rs-opencc"/' pyo3/pyproject.toml
          sed -i'' -e 's/name = "zhconv_rs"/name = "zhconv_rs_opencc"/' pyo3/Cargo.toml
          sed -i'' -e 's/fn zhconv_rs/fn zhconv_rs_opencc/' pyo3/src/lib.rs
      - name: Build wheels - OpenCC
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist --find-interpreter -m pyo3/Cargo.toml -F opencc
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: pyo3/dist

  release:
    name: Release
    environment: pypi
    runs-on: ubuntu-latest
    # if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        #if: "startsWith(github.ref, 'refs/tags/')"
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
