name: PyO3

on:
  workflow_dispatch:
  push:
    branches:
      # - main
      - dev
    tags:
      - v*
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --sdist -o pyo3/dist -i 3.7 3.8 3.9 3.10 3.11 pypy3.8 pypy3.9 p3.10
      - name: Install built wheel - x86_64
        run: |
          pip install zhconv-rs --no-index --find-links pyo3/dist --force-reinstall
          # pip install pytest
          # pytest
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release -o pyo3/dist -i 3.8 3.9 3.10 3.11 pypy3.8 pypy3.9 pypy3.10
      - name: Install built wheel - universal2
        run: |
          pip install zhconv-rs --no-index --find-links pyo3/dist --force-reinstall
          # pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: pyo3/dist

  windows:
    runs-on: windows-latest
    name: windows (${{ matrix.platform.target }})
    strategy:
      matrix:
        platform:
          - target: x64
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12 pypy3.8 pypy3.9 pypy3.10
          - target: x86
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.platform.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -o pyo3/dist -i ${{ matrix.platform.interpreter }}
      - name: Install built wheel
        run: |
          pip install zhconv-rs --no-index --find-links pyo3/dist --force-reinstall
          # pip install pytest
          # pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: pyo3/dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release -o pyo3/dist -i 3.7 3.8 3.9 3.10 3.11 3.12 pypy3.8 pypy3.9 pypy3.10
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install zhconv-rs --no-index --find-links pyo3/dist --force-reinstall
        # pip install pytest
        # pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: pyo3/dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release -o pyo3/dist -i 3.7 3.8 3.9 3.10 3.11 3.12 pypy3.8 pypy3.9 pypy3.10
    - uses: uraimo/run-on-arch-action@v2.3.0
      if: matrix.target != 'ppc64'
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3 python3-pip
          pip3 install -U pip pytest
        run: |
          pip3 install zhconv-rs --no-index --find-links pyo3/dist/ --force-reinstall
          # pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: pyo3/dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release -o pyo3/dist -i 3.7 3.8 3.9 3.10 3.11 3.12
    - name: Install built wheel
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install -U pip pytest
          pip3 install zhconv-rs --no-index --find-links /io/pyo3/dist/ --force-reinstall
          # python3 -m pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: pyo3/dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.platform.target }}
        manylinux: musllinux_1_2
        args: --release -o pyo3/dist -i 3.7 3.8 3.9 3.10 3.11 3.12
    - uses: uraimo/run-on-arch-action@v2.3.0
      name: Install built wheel
      with:
        arch: ${{ matrix.platform.arch }}
        distro: alpine_latest
        githubToken: ${{ github.token }}
        install: |
          apk add py3-pip
          pip3 install -U pip pytest
        run: |
          pip3 install zhconv-rs --no-index --find-links pyo3/dist/ --force-reinstall
          # python3 -m pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: pyo3/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, linux-cross, musllinux, musllinux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing *

# Adapted from: https://github.com/messense/py-dissimilar/blob/main/.github/workflows/CI.yml
